/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function() {
var exports = {};
exports.id = "pages/api/speakers/[id]";
exports.ids = ["pages/api/speakers/[id]"];
exports.modules = {

/***/ "./pages/api/speakers/[id].js":
/*!************************************!*\
  !*** ./pages/api/speakers/[id].js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ handler; }\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//import {data} from '../../../SpeakerData';\n\n\n\nconst {\n  promisify\n} = __webpack_require__(/*! util */ \"util\");\n\nconst readFile = promisify((fs__WEBPACK_IMPORTED_MODULE_1___default().readFile));\nconst writeFile = promisify((fs__WEBPACK_IMPORTED_MODULE_1___default().writeFile));\n\nconst delay = ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\n\nasync function handler(req, res) {\n  //res.status(200).send(JSON.stringify(data, null, 2));\n  const method = req === null || req === void 0 ? void 0 : req.method;\n  const id = parseInt(req === null || req === void 0 ? void 0 : req.query.id);\n  const recordFromBody = req === null || req === void 0 ? void 0 : req.body;\n  const jsonFile = path__WEBPACK_IMPORTED_MODULE_0___default().resolve(\"./\", \"db.json\");\n\n  switch (method) {\n    case \"POST\":\n      await postMethod();\n      break;\n\n    case \"PUT\":\n      await putMethod();\n      break;\n\n    case \"DELETE\":\n      await deleteMethod();\n      break;\n\n    default:\n      res.status(501).send(`Method ${method} not implemented`);\n      console.log(`Method ${method} not implemented`);\n  }\n\n  async function putMethod() {\n    try {\n      const readFileData = await readFile(jsonFile);\n      await delay(1000);\n      const speakers = JSON.parse(readFileData).speakers;\n\n      if (!speakers) {\n        res.status(404).send(\"Error: Request failed with status code 404\");\n      } else {\n        const newSpeakersArray = speakers.map(function (rec) {\n          return rec.id == id ? recordFromBody : rec;\n        });\n        writeFile(jsonFile, JSON.stringify({\n          speakers: newSpeakersArray\n        }, null, 2));\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).send(JSON.stringify(speakers, null, 2));\n        console.log(`PUT /api/speakers/${id} status:200`);\n      }\n    } catch (e) {\n      res.status(500).send(`PUT /api/speakers/${id} status: 500 unexpected error`);\n      console.log(`PUT /api/speakers/${id} status: 200`, e);\n    }\n  }\n\n  async function postMethod() {\n    try {\n      const readFileData = await readFile(jsonFile);\n      await delay(1000);\n      const speakers = JSON.parse(readFileData).speakers;\n\n      if (!speakers) {\n        res.status(404).send(\"Error: Request failed with status code 404\");\n      } else {\n        const idNew = speakers.reduce((accumulator, currentValue) => {\n          const idCurrent = parseInt(currentValue.id);\n          return idCurrent > accumulator ? idCurrent : accumulator;\n        }, 0) + 1;\n\n        const newSpeakerRec = _objectSpread(_objectSpread({}, recordFromBody), {}, {\n          id: idNew.toString()\n        });\n\n        const newSpeakersArray = [newSpeakerRec, ...speakers];\n        writeFile(jsonFile, JSON.stringify({\n          speakers: newSpeakersArray\n        }, null, 2));\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).send(JSON.stringify(newSpeakerRec, null, 2));\n        console.log(`POST /api/speakers/${id} status:200`);\n      }\n    } catch (e) {\n      res.status(500).send(`POST /api/speakers/${id} status: 500 unexpected error`);\n      console.log(`POST /api/speakers/${id} status: 200`, e);\n    }\n  }\n\n  async function deleteMethod() {\n    try {\n      const readFileData = await readFile(jsonFile);\n      await delay(1000);\n      const speakers = JSON.parse(readFileData).speakers;\n\n      if (!speakers) {\n        res.status(404).send(\"Error: Request failed with status code 404\");\n      } else {\n        const newSpeakersArray = speakers.filter(function (rec) {\n          return rec.id != id;\n        });\n        writeFile(jsonFile, JSON.stringify({\n          speakers: newSpeakersArray\n        }, null, 2));\n        res.setHeader(\"Content-Type\", \"application/json\");\n        res.status(200).send(JSON.stringify(speakers.find(rec => rec.id == id), null, 2));\n        console.log(`DELETE /api/speakers/${id} status:200`);\n      }\n    } catch (e) {\n      res.status(500).send(`DELETE /api/speakers/${id} status: 500 unexpected error`);\n      console.log(`DELETE /api/speakers/${id} status: 200`, e);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/api/speakers/[id].js\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ (function(module) {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ (function(module) {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ (function(module) {

"use strict";
module.exports = require("util");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = (__webpack_exec__("./pages/api/speakers/[id].js"));
module.exports = __webpack_exports__;

})();